// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int              @id @default(autoincrement())
  username      String           @unique
  password      String
  email         String           @unique
  full_name     String
  role          Role             @default(USER)
  otp           Int?
  created_at    DateTime         @default(now())
  updated_at    DateTime         @updatedAt
  quizResults   UserQuizResult[]
  profile       UserProfile[]
  refresh_token RefreshToken[]
  log           Log[]
}

enum Role {
  USER
  ADMIN
}

model UserProfile {
  id          Int       @id @default(autoincrement())
  user_id     Int       @unique
  bod         DateTime?
  gender      Gender?
  phoneNumber String?
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}

enum Gender {
  male
  female
}

model RefreshToken {
  id            Int      @id @default(autoincrement())
  user_id       Int
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  refresh_token String   @db.VarChar(1024)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Log {
  id          Int       @id @default(autoincrement())
  user_id     Int
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  action      ActionLog
  description String    @db.Text
  created_at  DateTime  @default(now())
}

enum ActionLog {
  LOGOUT
  LOGIN
  CREATE
  UPDATE
  DELETE
}

enum Answer {
  A
  B
  C
  D
}

model Quiz {
  id          Int              @id @default(autoincrement())
  title       String
  description String
  created_at  DateTime         @default(now())
  updated_at  DateTime         @updatedAt
  questions   QuizQuestion[]
  quizResults UserQuizResult[]
}

model QuizQuestion {
  id         Int          @id @default(autoincrement())
  quiz_id    Int
  question   String
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  quiz       Quiz         @relation(fields: [quiz_id], references: [id])
  answers    QuizAnswer[]
}

model QuizAnswer {
  id          Int          @id @default(autoincrement())
  question_id Int
  answer      Answer
  value       Int // Nilai untuk setiap jawaban
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  question    QuizQuestion @relation(fields: [question_id], references: [id])
}

model UserQuizResult {
  id           Int      @id @default(autoincrement())
  user_id      Int
  quiz_id      Int
  answers      Json
  score        Int
  category     String
  message      String
  completed_at DateTime @default(now())
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  user         User     @relation(fields: [user_id], references: [id])
  quiz         Quiz     @relation(fields: [quiz_id], references: [id])
}
